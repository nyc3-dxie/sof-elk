# SOF-ELKÂ® Configuration File
# (C)2022 Pierre Lidome and Arjun Bhardwaj
# (C)2023 SOF-ELK integrations and additional parsing features by Lewes Technology Consulting, LLC
#
# This file parses JSON-formatted Microsoft 365 UAL files in UTF-8 encoding
# For some versions of PowerShell, this may require manually specifying the encoding in the "out-file" scriptlet such as:
#   search-unifiedauditlog -StartDate 2022-12-01 -EndDate 2023-01-10 -ResultSize 5000 -SessionCommand ReturnNextPreviewPage | Select-Object -ExpandProperty AuditData | out-file -Encoding UTF8 "202201090807ual_All.json"
# reference: https://learn.microsoft.com/en-us/office/office-365-management-api/office-365-management-activity-api-schema#common-schema

filter {
  if [type] == "office365csv" {


    if [message] =~ /^CreationDate/ or [message] =~ /^RecordId/ or [message] =~ /^PSComputerName/ {
              drop{}
    }
                 
                 
                 
                 
                                
# date-first format is from web-based log extraction
if [message] =~ /^[0-9]{4}-[0-9]{2}-[0-9]{2}T/ {
csv {
skip_header => "true"
skip_empty_rows => "true"
columns => [ "CreationDate", "UserIds", "Operations", "AuditData" ] 
}

    # GUID-first from more recent GUI extraction
} else if [message] =~ /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/ {
  csv {
skip_header => "true"
skip_empty_rows => "true"
columns => [ "RecordId", "CreationDate", "RecordType", "Operation", "UserId", "AuditData" ]
}

#dxie modification - this will parse the audit data
if[AuditData]{
  dissect {
    mapping => {
     "AuditData" => '{"CreationTime":"%{creation_time}","Id":"%{guid}","Operation":"%{operation}","OrganizationId":"%{oranization_guid}","RecordType":%{record_type},"ResultStatus":%{result_status},"UserKey":"%{user_key}","UserType":%{user_type},"Version":%{version},"Workload":"%{workload}","ClientIP":"%{client_ip}:%{client_port}","ObjectId":"%{object_id}","UserId":"%{user_id}","AppId":"%{app_id}","ClientAppId":"%{clientapp_guid}","ExternalAccess":%{external_access},"OrganizationName":"%{organization_name}","OriginatingServer":"%{origination_server}","Parameters":[%{parameters}],"SessionId":"%{session_guid}\"\}}'
  }
}


#display the parameter fields if needed
#mutate{
#  add_field => {"para" => "%{parameters}"}  
#    } 
}

#modification ends here more below


 # computername-first format is from powershell extraction
} else {
 csv {
 skip_header => "true"
 skip_empty_rows => "true"
 columns => [ "PSComputerName", "RunspaceId", "PSShowComputerName", "RecordType", "CreationDate", "UserIds", "Operations", "AuditData", "ResultIndex", "ResultCount", "Identity", "IsValid", "ObjectState" ]
 }
}

#please remove my comments on the vm for a cleaner code
#dxie modification - this will split the parameter fields to name and value
if[parameters]{
    kv{
    field_split => "},{"
    value_split => ":"
    source => "parameters"
 }

mutate{
 add_field => {"name" => '%{["Name"]}'}
 add_field => {"value" => '%{["Value"]}'}
}

#ruby will match the name and value to each other in the pipeline
ruby {
  code => '
  n = event.get("name")
    if n
     ns = n.split(",")
     ns.each_index{|x|
     v = event.get("value")
     vs = v.split(",")
     event.set("parameters.#{ns[x]}" , vs[x])
    }
  end
 '
 }
}

#for some reason session_guid displays }" at the end, this code is just to remove it
mutate{
    gsub => ["session_guid", "[\"\}]", " "]
}
#modification ends here more below

                   
    # matching the timestamp to the time of the event occurence.  CreationTime is a field that is pulled from the AuditData JSON
    date {
      match => [ "[creation_time]", "ISO8601" ]
    }

    # matching source IP from the field ClientIP
    if [raw][ClientIP] {
      grok {
        patterns_dir => [ "/usr/local/sof-elk/grok-patterns" ]
        match => {
          "[raw][ClientIP]" => [ "\[?%{IP:client_ip}\]?(?::%{INT:client_port})?" ]
        }
      }
    }
    # matching against ClientIPAddress or ActorIpAddress
    if [raw][ClientIPAddress] or [raw][ActorIpAddress] {
      grok {
        patterns_dir => [ "/usr/local/sof-elk/grok-patterns" ]
        match => {
          "[raw][ClientIPAddress]" => [ "\[?%{IP:source_ip}\]?(?::%{INT:source_port})?" ]
          "[raw][ActorIpAddress]" => [ "\[?%{IP:source_ip}\]?(?::%{INT:source_port})?" ]
        }
      }
    }

    # Break out the Parameters into their Name:Value assignments
    if [raw][Parameters] and ![raw][Parameters][0][Name] {
      # this occasionally occurs when [Parameters] is a string or an array of strings
      mutate {
        add_field => { "[parameters][flag]" => "%{[raw][Parameters]}" }
      }
    } else if [raw][Parameters] {
      ruby {
        path => "/usr/local/sof-elk/supporting-scripts/split_kv_to_fields.rb"
        script_params => {
          "source_field" => "[raw][Parameters]"
          "destination_field" => "[parameters]"
          "key_field" => "Name"
        }
      }
    }


    # Break out the OperationProperties into their Name:Value assignments
    if [raw][OperationProperties] {
      ruby {
        path => "/usr/local/sof-elk/supporting-scripts/split_kv_to_fields.rb"
        script_params => {
          "source_field" => "[raw][OperationProperties]"
          "destination_field" => "[operation_properties]"
          "key_field" => "Name"
          "val_field" => "Value"
        }
      }
    }

    # Break out the ExtendedProperties into their Name:Value assignments
    if [raw][ExtendedProperties] {
      ruby {
        path => "/usr/local/sof-elk/supporting-scripts/split_kv_to_fields.rb"
        script_params => {
          "source_field" => "[raw][ExtendedProperties]"
          "destination_field" => "[extended_properties]"
          "key_field" => "Name"
          "val_field" => "Value"
        }
      }
    }
    if [extended_properties][UserAgent] {
      mutate {
        rename => {
          "[extended_properties][UserAgent]" => "useragent"
        }
      }
    }

    # Break out the DeviceProperties into their Name:Value assignments
    if [raw][DeviceProperties] {
      ruby {
        path => "/usr/local/sof-elk/supporting-scripts/split_kv_to_fields.rb"
        script_params => {
          "source_field" => "[raw][DeviceProperties]"
          "destination_field" => "[device_properties]"
          "key_field" => "Name"
          "val_field" => "Value"
        }
      }
    }

    # Break out the ModfiedProperties array to a kv-multi
    if [raw][ModifiedProperties] and ![raw][ModifiedProperties][0][Name] {
      # this occasionally occurs when [ModifiedProperties] is a string or an array of strings
      mutate {
        add_field => { "[modified_properties][flag]" => "%{[raw][ModifiedProperties]}" }
      }
    } else if [raw][ModifiedProperties] {
      ruby {
        path => "/usr/local/sof-elk/supporting-scripts/split_kv_multi_to_fields.rb"
        script_params => {
          "source_field" => "[raw][ModifiedProperties]"
          "destination_field" => "[modified_properties]"
          "key_field" => "Name"
        }
      }
    }

    # mass field renaming
    # for some reason, this behaves erratically unless the fields are listed alphabetically
    # PJH: Need to validate: Id (name), SupportTicketId (format)
    mutate {
      rename => {
        "[raw][Actor]" => "actor"
        "[raw][ActorContextId]" => "actor_context_guid"
        "[raw][AffectedItems]" => "affected_items"
        "[raw][AlertEntityId]" => "alert_entity"
        "[raw][AlertId]" => "alert_guid"
        "[raw][AlertLinks]" => "alert_links"
        "[raw][AlertType]" => "alert_type"
        "[raw][AppAccessContext]" => "app_access_context"
        "[raw][AppId]" => "app_id"
        "[raw][ApplicationId]" => "application_guid"
        "[raw][AzureActiveDirectoryEventType]" => "azure_active_directory_event_type"
        "[raw][Category]" => "category"
        "[raw][ClientAppId]" => "client_app_id"
        "[raw][ClientInfoString]" => "client_info_string"
        "[raw][ClientProcessName]" => "process_name"
        "[raw][ClientVersion]" => "client_version"
        "[raw][CmdletVersion]" => "cmdlet_version"
        "[raw][Comments]" => "comments"
        "[raw][CommunicationType]" => "communication_type"
        "[raw][CorrelationId]" => "correlation_guid"
        "[raw][CrossMailboxOperation]" => "cross_mailbox_operation"
        "[raw][CustomUniqueId]" => "custom_unique_id"
        "[raw][Data]" => "data"
        "[raw][DestFolder]" => "destination_folder"
        "[raw][DoNotDistributeEvent]" => "do_not_distribute_event"
        "[raw][EntityType]" => "entity_type"
        "[raw][EventData]" => "event_data"
        "[raw][EventSource]" => "event_source"
        "[raw][ExternalAccess]" => "external_access"
        "[raw][Folder]" => "folder"
        "[raw][Folders]" => "folders"
        "[raw][HighPriorityMediaProcessing]" => "high_priority_media_processing"
        "[raw][Id]" => "report_guid"
        "[raw][Identity]" => "identity"
        "[raw][InterSystemsId]" => "inter_systems_guid"
        "[raw][InternalLogonType]" => "internal_logon_type"
        "[raw][IntraSystemId]" => "intra_system_guid"
        "[raw][IsManagedDevice]" => "is_managed_device"
        "[raw][IsValid]" => "is_valid"
        "[raw][Item]" => "item"
        "[raw][ItemName]" => "item_name"
        "[raw][ItemType]" => "item_type"
        "[raw][ListId]" =>  "list_guid"
        "[raw][ListItemUniqueId]" => "list_item_unique_guid"
        "[raw][LogonError]" => "logon_error"
        "[raw][LogonType]" => "logon_type"
        "[raw][LogonUserSid]" => "logon_user_sid"
        "[raw][MailboxGuid]" => "mailbox_guid"
        "[raw][MailboxOwnerSid]" => "mailbox_owner_sid"
        "[raw][MailboxOwnerUPN]" => "mailbox_owner_upn"
        "[raw][Members]" => "members"
        "[raw][Name]" => "name"
        "[raw][ObjectId]" => "object_id"
        "[raw][ObjectName]" => "object_name"
        "[raw][ObjectState]" => "object_state"
        "[raw][Operation]" => "operation"
        "[raw][OperationCount]" => "operation_count"
        "[raw][Operations]" => "operations"
        "[raw][OrganizationId]" => "organization_guid"
        "[raw][OrganizationName]" => "organization_name"
        "[raw][OriginatingServer]" => "originating_server"
        "[raw][PSComputerName]" => "ps_computer_name"
        "[raw][PSShowComputerName]" => "ps_show_computer_name"
        "[raw][ParentFolder]" => "parent_folder"
        "[raw][PolicyId]" => "policy_guid"
        "[raw][RecordId]" => "record_id"
        "[raw][RecordType]" => "record_type"
        "[raw][ResultCount]" => "result_count"
        "[raw][ResultIndex]" => "result_index"
        "[raw][ResultStatus]" => "result_status"
        "[raw][RunspaceId]" => "runspace_guid"
        "[raw][SessionId]" => "session_guid"
        "[raw][Severity]" => "severity"
        "[raw][Site]" => "site_guid"
        "[raw][SiteUrl]" => "site_url"
        "[raw][SkypeForBusinessEventType]" => "skype_for_business_event_type"
        "[raw][Source]" => "source"
        "[raw][SourceFileExtension]" => "source_file_extension"
        "[raw][SourceFileName]" => "source_filename"
        "[raw][SourceRelativeUrl]" => "source_relative_url"
        "[raw][Status]" => "status"
        "[raw][SupportTicketId]" => "support_ticket_id"
        "[raw][Target]" => "target"
        "[raw][TargetContextId]" => "target_context_guid"
        "[raw][TargetUserOrGroupName]" => "target_user_name"
        "[raw][TargetUserOrGroupType]" => "target_user_type"
        "[raw][TeamGuid]" => "team_guid"
        "[raw][TeamName]" => "team_name"
        "[raw][TenantName]" => "tenant_name"
        "[raw][UserAgent]" => "useragent"
        "[raw][UserId]" => "user_name"
        "[raw][UserIds]" => "user_ids"
        "[raw][UserKey]" => "user_key"
        "[raw][UserType]" => "user_type"
        "[raw][Version]" => "version"
        "[raw][WebId]" => "web_guid"
        "[raw][Workload]" => "workload"
      }
    }

    # remove original [raw] superfield
    mutate {
      remove_field => [
        "raw"
      ]
    }

#dxie modification - removing duplicates/unnecessary fields
    mutate{
    remove_field => ["Operation", "RecordType", "UserId", "message", "name", "value", '"Name"', '"Value"', "parameters", "creation_time", "CreationDate"]      
    #comment out when making changes to help see if the information displayed is accurate 
    remove_field => "AuditData"
    }
#modification ends here more below
  
  }
}
